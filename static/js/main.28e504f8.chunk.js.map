{"version":3,"sources":["utils/ThemeContext.js","components/ThemeContextExample.js","App.js","reportWebVitals.js","index.js"],"names":["colors","theme1","theme2","ThemeContext","createContext","ThemeContextExample","themeContext","useContext","className","style","color","MonthRU","WeeksRu","App","useState","setColors","monthCounter","setMonthCounter","years","setYears","month","setMonth","Date","date","setDate","getLeftPosition","monthDays","Array","from","length","getFullYear","getDay","v","k","reverse","getRightPosition","useEffect","getDate","indexMount","days","leftPosition","rightPosition","Provider","value","type","onChange","e","target","getMonth","onClick","title","map","item","monthIndex","weeksIndex","borderColor","day","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28e504f8.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst colors = {\n  theme1: null,\n  theme2: null,\n}\n\nexport const ThemeContext = createContext(colors);","import { useContext } from 'react';\nimport { ThemeContext } from '../utils';\n\nexport const ThemeContextExample = () => {\n  const themeContext = useContext(ThemeContext);\n\n  return (\n   <div className=\"controls-label\">\n     <h3 style={{ color: themeContext.theme1 }}>Цвет таблицы</h3>\n     <h3 style={{ color: themeContext.theme2 }}>Цвет Заголовка</h3>\n   </div>\n  )\n};","import { useState, useEffect } from 'react';\nimport { ThemeContext } from './utils';\nimport { ThemeContextExample } from './components';\nimport './App.css';\n\n// Месяцы\nconst MonthRU = [\n  'Январь',\n  'Февраль',\n  'Март',\n  'Апрель',\n  'Май',\n  'Июнь',\n  'Июль',\n  'Август',\n  'Сентябрь',\n  'Октябрь',\n  'Ноябрь',\n  'Декабрь',\n];\n\n// Недели\nconst WeeksRu = [\n  'Понедельник',\n  'Вторник',\n  'Среда',\n  'Четверг',\n  'Пятница',\n  'Суббота',\n  'Воскресенье',\n];\n\nconst App = () => {\n  const [ colors, setColors ] = useState({\n    theme1: 'silver',\n    theme2: 'black',\n  });\n  const [ monthCounter, setMonthCounter ] = useState(0); // Количество месяцев в году\n  const [ years, setYears ] = useState([]); // Формируем год\n  const [ month, setMonth ] = useState(null); // Формируем в году месяцы\n  const [ date, setDate ] = useState(new Date());\n\n  const getLeftPosition = (monthDays) => Array.from(\n    { length: new Date(date.getFullYear(), monthCounter, 0).getDay() },\n    (v, k) => monthDays - k).reverse();\n\n  const getRightPosition = (monthDays) => Array.from(\n    { length: (6 * 7) - getLeftPosition(monthDays).length - monthDays  },\n    (v, k) => k + 1);\n\n  useEffect(() => {\n    setMonthCounter(0);\n    setYears([]);\n  }, [ date ]);\n\n  useEffect(() => {\n    if (monthCounter > 11) return;\n\n    const monthDays = new Date(date.getFullYear(), monthCounter + 1, 0).getDate(); // Количество дней в месяце\n\n    setMonth({\n      indexMount: monthCounter,\n      month: MonthRU[monthCounter],\n      monthDays,\n      days: Array.from({ length: monthDays }, (v, k) => k + 1),\n      leftPosition: getLeftPosition(monthDays),\n      rightPosition: getRightPosition(monthDays)\n    });\n\n    setMonthCounter(monthCounter + 1);\n  }, [ monthCounter, date ]);\n\n  useEffect(() => {\n    if (!month) return;\n\n    setYears([\n      ...years,\n      month\n    ]);\n  }, [ month ]);\n\n  return (\n    <ThemeContext.Provider value={colors}>\n\n      <div className=\"controls\">\n        <div className=\"controls-btn\">\n          <input type=\"color\" value={colors.theme1} onChange={e => setColors({\n            ...colors,\n            theme1: e.target.value\n          })}/>\n\n          <input type=\"color\" value={colors.theme2} onChange={e => setColors({\n            ...colors,\n            theme2: e.target.value\n          })}/>\n        </div>\n\n        <ThemeContextExample />\n\n        <div className=\"calendar-controls\">\n          <div className=\"calendar-data\">\n            <span>{date.getDate()} {MonthRU[date.getMonth()]}</span>\n            <div\n              className=\"calendar-btn fas fa-chevron-left\"\n              onClick={() => setDate(new Date(date.getFullYear() - 1, date.getMonth(), date.getDate()))}\n              title=\"Назад\"\n            />\n            <span>{date.getFullYear()}</span>\n          </div>\n          <div\n            className=\"calendar-btn fas fa-chevron-right\"\n            onClick={() => setDate(new Date(date.getFullYear() + 1, date.getMonth(), date.getDate()))}\n            title=\"Вперед\"\n          />\n        </div>\n      </div>\n\n      <div className=\"widgets\">\n        <div className=\"widget-calendar\">\n          <div className=\"years\">\n            {years?.length ? (\n              years.map((item, monthIndex) => (\n                <div className=\"month\" key={monthIndex}>\n                  <div className=\"month-title\" style={{color: colors.theme2}}>{item?.month}</div>\n                  <div className=\"weeks\">\n                    {WeeksRu.map((item, weeksIndex) => (\n                      <div className=\"week\" style={{borderColor: colors.theme1}} key={weeksIndex + item}>{item}</div>\n                    ))}\n                  </div>\n                  <div className=\"days\">\n                    {item?.leftPosition.map(day => (\n                      <div key={day} className=\"day no-active\" style={{borderColor: colors.theme1}}>{day}</div>\n                    ))}\n                    {item?.days.map(day => (\n                      <div\n                        key={day}\n                        style={{borderColor: colors.theme1}}\n                        className={`day ${(date.getMonth() === item.indexMount) && (day === date.getDate() && date.getFullYear() === new Date().getFullYear()) ? 'now-date' : ''}`}\n                      >\n                        {day}\n                      </div>\n                    ))}\n                    {item?.rightPosition.map(day => (\n                      <div key={day} className=\"day no-active\" style={{borderColor: colors.theme1}}>{day}</div>\n                    ))}\n                  </div>\n                </div>\n              ))\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}